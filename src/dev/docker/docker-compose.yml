services:
  mq:
    image: rabbitmq:management
    container_name: mov_mq_dev
    restart: unless-stopped
    pull_policy: daily
    ports:
      - ${MQ_PORT:-5672}:5672
      - ${MQ_UI_PORT:-8081}:15672
    networks:
      - mov_dev
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USER:-mov}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASSWORD:-password}

  mongo:
    image: mongo:latest
    container_name: mov_db_dev
    restart: unless-stopped
    pull_policy: daily
    ports:
      - ${MONGO_PORT:-27017}:27017
    networks:
      - mov_dev
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MOV_DB_NAME:-movDB}
      MOV_DB_NAME: ${MOV_DB_NAME:-movDB}
      MOV_DB_USER_NAME: ${MOV_DB_USER_NAME:-mov}
      MOV_DB_USER_PASSWORD: ${MOV_DB_USER_PASSWORD:-password}
    volumes:
      - ${MONGO_LOCAL_DATA:-~/.mongo_data/movDB}:/data/db
    configs:
      - source: initialize-movDB.js
        target: /docker-entrypoint-initdb.d/init-mongo.js

  mongo_express:
    image: mongo-express:latest
    container_name: mov_db_ui_dev
    restart: unless-stopped
    pull_policy: daily
    depends_on:
      - mongo
    ports:
      - ${MONGO_ADMIN_PORT:-8082}:8081
    networks:  
      - mov_dev
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_ADMIN_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_ADMIN_PASSWORD:-password}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT:-27017}
      ME_CONFIG_MONGODB_SERVER: mongo

networks:
  mov_dev:

configs:
  initialize-movDB.js:
    content: |
      db.createUser({
          user: process.env.MOV_DB_USER_NAME,
          pwd: process.env.MOV_DB_USER_PASSWORD,
          roles: [{
              role: 'readWrite',
              db: process.env.MOV_DB_NAME
          }]
      })
