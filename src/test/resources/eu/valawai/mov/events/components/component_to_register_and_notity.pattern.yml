asyncapi: "2.6.0"
info:
 title: C{0} {1} API
 version: "1.0.0"
 description: This VALAWAI component for testing that when is registered is committed.
 license:
  name: GNU General Public License version 3
  url: https://opensource.org/license/gpl-3-0/
 contact:
  name: VALAWAI
  url: https://valawai.eu/

channels:
  valawai/c{0}/{1}/data/output:
    publish:
      summary: Send a message.
      message:
        $ref: "#/components/messages/output_message"

  valawai/c{0}/{1}/data/input:
    subscribe:
      summary: Listen to a message.
      message:
        $ref: "#/components/messages/input_message"

  valawai/c{0}/{1}/control/registered:
    subscribe:
      summary: The message to notify when the component has been registered.
      message:
        $ref: "#/components/messages/registered_component"

components:
  messages:
    output_message:
      contentType: application/json
      payload:
        $ref: "#/components/schemas/output_payload"

    input_message:
      contentType: application/json
      payload:
        $ref: "#/components/schemas/input_payload"
        
    registered_component:
      contentType: application/json
      payload:
        $ref: "#/components/schemas/component_payload"


  schemas:
    output_payload:
      description: The information that the component publish.
      type: object
      properties:
        {2}:
          type: string
          description: The content of the field.

    input_payload:
      description: The information that the component subscribe.
      type: object
      properties:
        {3}:
          type: string
          description: The content of the field.
          
    component_payload:
      type: object
      properties:
        id:
          description: The identifier of the component.
          type: string
          pattern: "[0-9a-fA-F]+"
          examples: 
            - "65c1f59ea4cb169f42f5edc4"
        name:
          description: The name of the component.
          type: string
          examples: 
            - "c0_voice_to_text"
        description:
          description: The description of the component.
          type: string
          examples: 
            - "Generate text from the ambient audio"
        version:
          description: The component version.
          type: string
          pattern: "\\d+\\.\\d+\\.\\d+"
          examples: 
            - "1.0.5"
        api_version:
          description: The version of the component API.
          type: string
          pattern: "\\d+\\.\\d+\\.\\d+"
          examples: 
            - "2.3.0"
        type:
          description: The type level of the component in the VALAWAI.
          oneOf:
            - $ref: "#/components/schemas/component_type"
        since:
          description: The epoch time, in seconds, since the component is available in VALAWAI.
          type: integer
          minimum: 0
          examples: 
            - "1709902001"
        channels:
          description: The channels that the component have.
          type: array
          items:
            - $ref: "#/components/schemas/channel_schema"

    component_type:
      type: string
      enum:
        - "C0"
        - "C1"
        - "C2"

    channel_schema:
      type: object
      description: A schema that define the messages that a channel can receive or send.
      properties:
        id:
          description: The identifier of the channel.
          type: string
          examples: 
            - "valawai/c0_voice_to_text/audio"
        description:
          description: The description of the channel.
          type: string
          examples: 
            - "Provide the audio to convert to text"
        subscribe:
          description: The type of payload that the channel can receive.
          oneOf:
            - $ref: "#/components/schemas/payload_schema"
        publish:
          description: The type of payload that the channel can send.
          oneOf:
            - $ref: "#/components/schemas/payload_schema"

    payload_schema:
      type: object
      discriminator: type
      
      properties:
        type:
          type: string
          enum:
            - "BASIC"
            - "ENUM"
            - "OBJECT"
            - "ARRAY"
      required:
        - type

    basic_payload_schema:
      description: The basic payload schema.
      allOf:
        - $ref: "#/components/schemas/payload_schema"
        - type: object
          properties:
            type:
              const: "BASIC"
            format:
              type: string
              description: The format of the basic type.
              enum:
                - "INTEGER"
                - "NUMBER"
                - "BOOLEAN"
                - "STRING"

    enum_payload_schema:
      description: A payload that is defined of one value of a set.
      allOf:
        - $ref: "#/components/schemas/payload_schema"
        - type: object
          properties:
            type:
              const: "ENUM"
            values:
              type: array
              description: The possible enum values.
              items:
                - type: string

    object_payload_schema:
      description: A definition of a schema that describe an object.
      allOf:
        - $ref: "#/components/schemas/payload_schema"
        - type: object
          properties:
            type:
              const: "OBJECT"
            properties:
              description: The properties that define the object.
              additionalProperties:
                $ref: "#/components/schemas/payload_schema"
            
    array_payload_schema:
      description: A payload that is represented by an array of values.
      allOf:
        - $ref: "#/components/schemas/payload_schema"
        - type: object
          properties:
            type:
              const: "ARRAY"
            items:
              description: The type for the elements on the array.
              oneOf:
                - $ref: "#/components/schemas/payload_schema"
