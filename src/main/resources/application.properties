# The localization of the API
quarkus.default-locale=en
quarkus.locales=en

# Http configuration
quarkus.http.host=0.0.0.0
quarkus.http.port=8080
quarkus.http.test-host=0.0.0.0
quarkus.http.test-port=8090

# CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST, PUT, PATCH, DELETE

# Logging
quarkus.log.level=${MOV_LOG_LEVEL:INFO}
quarkus.log.min-level=TRACE
quarkus.log.console.enable=true
quarkus.log.console.level=WARN
quarkus.log.file.enable=true
quarkus.log.file.level=${MOV_LOG_LEVEL:INFO}
quarkus.log.file.path=var/run/log/quarkus.log
quarkus.log.file.async=true
quarkus.log.file.rotation.rotate-on-boot=true
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=100


%dev.quarkus.log.level=TRACE
%dev.quarkus.log.min-level=TRACE
%dev.quarkus.log.console.enable=true
%dev.quarkus.log.console.level=INFO
%dev.quarkus.log.file.enable=true
%dev.quarkus.log.file.level=TRACE
%dev.quarkus.log.file.path=target/dev-quarkus.log
%dev.quarkus.log.file.async=true
%dev.quarkus.log.file.rotation.max-file-size=10M
%dev.quarkus.log.file.rotation.max-backup-index=100

%test.quarkus.log.level=TRACE
%test.quarkus.log.min-level=TRACE
%test.quarkus.log.console.enable=true
%test.quarkus.log.console.level=FATAL
%test.quarkus.log.file.enable=true
%test.quarkus.log.file.level=ALL
%test.quarkus.log.file.path=target/test-quarkus.log
%test.quarkus.log.file.rotation.max-file-size=10M
%test.quarkus.log.file.rotation.max-backup-index=100
%test.quarkus.log.file.rotation.file-suffix=.yyyy-MM-dd-hh-mm


# Container builder
quarkus.container-image.builder=docker
quarkus.container-image.build=true
quarkus.container-image.group=valawai
quarkus.container-image.name=mov
quarkus.container-image.tag=${quarkus.application.version}


# MQ configuration
rabbitmq-host=mov-mq
rabbitmq-port=5672
rabbitmq-username=mov
rabbitmq-password=password
#rabbitmq-addresses=${rabbitmq-host}:${rabbitmq-port}

%dev.rabbitmq-host=host.docker.internal


# Configure the incoming RabbitMQ queue
mp.messaging.incoming.register_component.connector=smallrye-rabbitmq
mp.messaging.incoming.register_component.queue.name=valawai/component/register

mp.messaging.outgoing.send_register_component.connector=smallrye-rabbitmq
mp.messaging.outgoing.send_register_component.queue.name=valawai/component/register
mp.messaging.outgoing.send_register_component.exchange.name=""
mp.messaging.outgoing.send_register_component.default-routing-key=valawai/component/register

mp.messaging.incoming.change_topology.connector=smallrye-rabbitmq
mp.messaging.incoming.change_topology.queue.name=valawai/topology/change

mp.messaging.outgoing.send_change_topology.connector=smallrye-rabbitmq
mp.messaging.outgoing.send_change_topology.queue.name=valawai/topology/change
mp.messaging.outgoing.send_change_topology.exchange.name=""
mp.messaging.outgoing.send_change_topology.default-routing-key=valawai/topology/change

%test.mp.messaging.incoming.test_in.connector=smallrye-rabbitmq
%test.mp.messaging.incoming.test_in.queue.name=test/queue/in
%test.mp.messaging.outgoing.test_out.connector=smallrye-rabbitmq
%test.mp.messaging.outgoing.test_out.exchange.name=""
%test.mp.messaging.outgoing.test_out.default-routing-key=test/queue/out
%test.mp.messaging.outgoing.test_out.queue.name=test/queue/out

mp.messaging.incoming.query_components.connector=smallrye-rabbitmq
mp.messaging.incoming.query_components.queue.name=valawai/component/query

mp.messaging.outgoing.components_page.connector=smallrye-rabbitmq
mp.messaging.outgoing.components_page.queue.name=valawai/component/page
mp.messaging.outgoing.components_page.exchange.name=""
mp.messaging.outgoing.components_page.default-routing-key=valawai/component/page

mp.messaging.incoming.unregister_component.connector=smallrye-rabbitmq
mp.messaging.incoming.unregister_component.queue.name=valawai/component/unregister

mp.messaging.outgoing.send_unregister_component.connector=smallrye-rabbitmq
mp.messaging.outgoing.send_unregister_component.queue.name=valawai/component/unregister
mp.messaging.outgoing.send_unregister_component.exchange.name=""
mp.messaging.outgoing.send_unregister_component.default-routing-key=valawai/component/unregister

mp.messaging.incoming.add_log.connector=smallrye-rabbitmq
mp.messaging.incoming.add_log.queue.name=valawai/log/add

mp.messaging.incoming.query_connections.connector=smallrye-rabbitmq
mp.messaging.incoming.query_connections.queue.name=valawai/connection/query

mp.messaging.outgoing.connections_page.connector=smallrye-rabbitmq
mp.messaging.outgoing.connections_page.queue.name=valawai/connection/page
mp.messaging.outgoing.connections_page.exchange.name=""
mp.messaging.outgoing.connections_page.default-routing-key=valawai/connection/page

mp.messaging.incoming.create_connection.connector=smallrye-rabbitmq
mp.messaging.incoming.create_connection.queue.name=valawai/topology/create

mp.messaging.outgoing.send_create_connection.connector=smallrye-rabbitmq
mp.messaging.outgoing.send_create_connection.queue.name=valawai/topology/create
mp.messaging.outgoing.send_create_connection.exchange.name=""
mp.messaging.outgoing.send_create_connection.default-routing-key=valawai/topology/create


# Mongo DB configuration
%test.quarkus.mongodb.database=movDB
%dev.quarkus.mongodb.database=movDB
%dev.quarkus.mongodb.connection-string=mongodb://mov:password@host.docker.internal:27017/movDB

# Master of VALAWAI configurations
mov.url=http://${quarkus.http.host}:${quarkus.http.port}
