version: '3.7'
services:
  mq:
    image: rabbitmq:${RABBITMQ_TAG:-management}
    container_name: mov_mq
    restart: unless-stopped
    ports:
      - ${MQ_PORT:-5672}:5672
      - ${MQ_UI_PORT:-8081}:15672
    networks:
      - mov
    environment:
      RABBITMQ_DEFAULT_USER: ${MQ_USER:-mov}
      RABBITMQ_DEFAULT_PASS: ${MQ_PASSWORD:-password}
  mongo:
    image: mongo:${MONGODB_TAG:-latest}
    container_name: mov_db
    restart: unless-stopped
    ports:
      - ${MONGO_PORT:-27017}:27017
    networks:
      - mov
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-movDB}
    volumes:
      - ./initialize-movDB.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ${MONGO_LOCAL_DATA:-~/mongo_data/movDB}:/data/db
  mov:
    image: valawai/mov:${MOV_TAG:-latest}
    container_name: mov
    restart: unless-stopped
    depends_on:
      - mongo
      - mq
    ports:
      - ${MOV_UI_PORT:-8080}:8080
    networks:  
      - mov
    environment:
      RABBITMQ_HOST: mq
      RABBITMQ_PORT: ${MQ_PORT:-5672}
      RABBITMQ_USERNAME: ${MQ_USER:-mov}
      RABBITMQ_PASSWORD: ${MQ_PASSWORD:-password}
      QUARKUS_MONGODB_DATABASE: ${DB_NAME:-movDB}
      QUARKUS_MONGODB_CREDENTIALS_USERNAME: ${DB_USER_NAME:-mov}
      QUARKUS_MONGODB_CREDENTIALS_PASSWORD: ${DB_USER_PASSWORD:-password}
      QUARKUS_MONGODB_HOSTS: mongo:${MONGO_PORT:-27017}

networks:
  mov:
